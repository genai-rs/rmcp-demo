[package]
name = "rmcp-demo"
version = "0.1.0"
edition = "2021"

[dependencies]
# MCP SDK with HTTP transport support
rmcp = { git = "https://github.com/modelcontextprotocol/rust-sdk", branch = "main", features = ["server", "transport-streamable-http-server"] }
schemars = "0.8"

# Async runtime
tokio = { version = "1", features = ["full"] }

# HTTP server (required for rmcp streamable http)
axum = { version = "0.7", features = ["macros"] }
tower = "0.5"
tower-http = { version = "0.6", features = ["cors", "trace"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# OpenTelemetry
opentelemetry = "0.30"
opentelemetry_sdk = { version = "0.30", features = ["rt-tokio", "trace", "experimental_async_runtime", "experimental_trace_batch_span_processor_with_async_runtime"] }
opentelemetry-http = "0.30"
opentelemetry-semantic-conventions = "0.30"
opentelemetry-langfuse = { git = "https://github.com/genai-rs/opentelemetry-langfuse" }

# Tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt", "time"] }
tracing-opentelemetry = "0.31"

# Random for weather simulation
rand = "0.8"

# HTTP client for weather API
reqwest = { version = "0.12", features = ["json"] }

# Environment variables
dotenv = "0.15"

# Error handling
anyhow = "1.0"
thiserror = "2.0"

[patch.crates-io]
opentelemetry = { git = "https://github.com/timvw/opentelemetry-rust", branch = "opentelemetry-rust-option2" }
opentelemetry_sdk = { git = "https://github.com/timvw/opentelemetry-rust", branch = "opentelemetry-rust-option2" }
opentelemetry-http = { git = "https://github.com/timvw/opentelemetry-rust", branch = "opentelemetry-rust-option2" }
opentelemetry-semantic-conventions = { git = "https://github.com/timvw/opentelemetry-rust", branch = "opentelemetry-rust-option2" }
